Ecriture d'une fonction pour le traitement n3
Destruction des sejours à une date (jour) donné
paramètre : une date
retour : le nombre de séjours detruits

Une fonction en PL/SQL

CREATE OR REPLACE FUNCTION nom_function(
  parametre_nom parametre_type)
  RETURN return_type
IS
  x type;   Variable de la fonction
  y : type;
BEGIN


..
END;


tester
-> SET SERVEROUTPUT ON (au debut du fichier)
-> Ecrire sur la sortie standard : OBMS_OUTPUT put_line("blabla");


recupérer une valeur ?
(marche que sur une seule ligne): SELECT a INTO nom_variable FROM .....


CREATE OR REPLACE FUNCTION traitement_3(le_jour sejour.jour%type) RETURN integer
IS
  compteur integer;
BEGIN
  select count(*) INTO compteur FROM sejour WHERE jour < le_jour;
  -- Supression des séjours
  DELETE sejour WHERE jour < le_jour;
  RETURN compteur;
END;
/


pour la lancer : 

DECLARE
  n int;
begin
  n := traitement_3(455);
  dbms_output.put_line('effeace = ' || n);
end;
/

OU ALORS : 
EXEC dbms_output.put_line('efface = '|| traitement_3(500));

Maitenant le faire en procedure et pas en fonction :



CREATE OR REPLACE PROCEDURE traitement_3_proc(le_jour sejour.jour%type, compteur OUT integer)
IS
BEGIN
  SELECT count(*) INTO compteur FROM sejour WHERE jour < le_jour;
  -- Supression de sejours
  DELETE sejour WHERE jour < le_jour;
END;
/

DECLARE
  n int;
BEGIN
  traitement_3_proc(46, n);
  dbms_output.put_line('efface = ' || n);
END;
/


TRAITEMENT 1 :

CREATE OR REPLACE FUNCTION traitement_1(le_nom client.nom%type, l_age client.age%type) RETURN client.idc%type
IS
  le_idc client.idc%type;
BEGIN
  le_idc := seq_client.nextval;
  insert into client(idc, nom, age) values (le_idc, le_nom, l_age);
  RETURN le_idc;
END;
/


exec dbms_output.put_line('valeur retourne :' || traitement_1('Bob', 30));



Question 4 : procedure, pas de retour

CREATE OR REPLACE PROCEDURE traitement4(sejour_id sejour.ids%type)
IS
  l_sejour sejour%ROWTYPE;
  c_avoir client.avoir%TYPE;
BEGIN
    SELECT * INTO s_sejour FROM sejour WHERE ids = sejour_id;
    SELECT avoir INTO c_avoir FROM client WHERE idc = s_sejour.idc
    INSERT INTO archive VALUES (s_sejour.ids, s_sejour.idc, s_sejour.jour, c_avoir);
END;
/

on s'est arrêté à la question 5


